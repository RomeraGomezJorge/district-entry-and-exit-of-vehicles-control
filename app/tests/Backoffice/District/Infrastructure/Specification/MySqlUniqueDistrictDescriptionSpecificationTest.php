<?php
	
	
	namespace App\Tests\Backoffice\District\Infrastructure\Specification;
	
	
	
	use App\Backoffice\District\Domain\District;
	use App\Backoffice\District\Domain\UniqueDistrictDescriptionSpecification;
	use App\Tests\Backoffice\District\Domain\DistrictMother;
	use App\Tests\Backoffice\District\DistrictInfrastructureTestCase;
	use App\Tests\Shared\Domain\WordMother;
	
	final class MySqlUniqueDistrictDescriptionSpecificationTest extends DistrictInfrastructureTestCase
	{
		private District $District;
		
		protected function setUp(): void
		{
			parent::setUp(); // TODO: Change the autogenerated stub
			
			$this->District = DistrictMother::random();
		}
		
		/** @test */
		public function it_should_return_false_if_description_is_in_use(): void
		{
			$this->repository()->save($this->District);;
			
			$isInUse = $this->uniqueDistrictDescriptionSpecification()->isSatisfiedBy($this->District->getDescription());
			
			$this->assertEquals($isInUse,false);
		}
		
		/** @test */
		public function it_should_return_true_if_description_is_not_in_use(): void
		{
			$this->repository()->save($this->District);
			
			$newDescription = WordMother::random();
			
			$isInUse = $this->uniqueDistrictDescriptionSpecification()->isSatisfiedBy($newDescription);
			
			$this->assertEquals($isInUse,true);
		}
		
		protected function uniqueDistrictDescriptionSpecification(): UniqueDistrictDescriptionSpecification
		{
			return $this->service(UniqueDistrictDescriptionSpecification::class);
		}
	}