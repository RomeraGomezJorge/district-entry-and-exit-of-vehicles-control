<?php
	
	
	namespace App\Tests\Backoffice\User\Infrastructure\Specification;
	
	use App\Backoffice\User\Domain\UniqueUserNameSpecification;
	use App\Tests\Backoffice\User\UserInfrastructureTestCase;
	use App\Tests\Shared\Domain\WordMother;
	
	final class UniqueUserNameSpecificationTest extends UserInfrastructureTestCase
	{
		
		private $user;
		
		protected function setUp(): void
		{
			parent::setUp(); // TODO: Change the autogenerated stub
			
			$this->user =  $this->getUserCreatedForTest();
			
			$this->repository()->save($this->user);
		}
		
		/** @test */
		public function it_should_return_false_if_username_is_in_use(): void
		{
			$isInUse = $this->uniqueAuthorFullNameSpecification()->isSatisfiedBy($this->user->getUsername());
			
			$this->assertEquals($isInUse, false);
		}
		
		/** @test */
		public function it_should_return_true_if_fullname_is__not_in_use(): void
		{
			$newUserName = WordMother::random();
			
			$isInUse = $this->uniqueAuthorFullNameSpecification()->isSatisfiedBy($newUserName);
			
			$this->assertEquals($isInUse, true);
		}
		
		
		protected function uniqueAuthorFullNameSpecification(): UniqueUserNameSpecification
		{
			return $this->service(UniqueUserNameSpecification::class);
		}
		
		
	}