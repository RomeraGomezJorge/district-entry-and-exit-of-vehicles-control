<?php
	
	
	namespace App\Tests\Backoffice\TrafficPoliceBooth\Infrastructure\Specification;
	
	
	
	use App\Backoffice\TrafficPoliceBooth\Domain\TrafficPoliceBooth;
	use App\Backoffice\TrafficPoliceBooth\Domain\UniqueTrafficPoliceBoothDescriptionSpecification;
	use App\Tests\Backoffice\TrafficPoliceBooth\Domain\TrafficPoliceBoothMother;
	use App\Tests\Backoffice\TrafficPoliceBooth\TrafficPoliceBoothInfrastructureTestCase;
	use App\Tests\Shared\Domain\WordMother;
	
	final class UniqueTrafficPoliceBoothDescriptionSpecificationTest extends TrafficPoliceBoothInfrastructureTestCase
	{
		private TrafficPoliceBooth $trafficPoliceBooth;
		
		protected function setUp(): void
		{
			parent::setUp(); // TODO: Change the autogenerated stub
			
			$this->trafficPoliceBooth = TrafficPoliceBoothMother::random();
		}
		
		/** @test */
		public function it_should_return_false_if_description_is_in_use(): void
		{
			$this->repository()->save($this->trafficPoliceBooth);;
			
			$isInUse = $this->uniqueTrafficPoliceBoothDescriptionSpecification()->isSatisfiedBy($this->trafficPoliceBooth->getDescription());
			
			$this->assertEquals($isInUse,false);
		}
		
		/** @test */
		public function it_should_return_true_if_description_is_not_in_use(): void
		{
			$this->repository()->save($this->trafficPoliceBooth);
			
			$newDescription = WordMother::random();
			
			$isInUse = $this->uniqueTrafficPoliceBoothDescriptionSpecification()->isSatisfiedBy($newDescription);
			
			$this->assertEquals($isInUse,true);
		}
		
		protected function uniqueTrafficPoliceBoothDescriptionSpecification(): UniqueTrafficPoliceBoothDescriptionSpecification
		{
			return $this->service(UniqueTrafficPoliceBoothDescriptionSpecification::class);
		}
	}